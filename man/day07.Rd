% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day07.R
\name{day07}
\alias{day07}
\alias{f07a_optimize_fuel_linear}
\alias{f07b_optimize_fuel_triangular}
\alias{example_data_07}
\title{Day 07: The Treachery of Whales}
\usage{
f07a_optimize_fuel_linear(x)

f07b_optimize_fuel_triangular(x)

example_data_07(example = 1)
}
\arguments{
\item{x}{some data}

\item{example}{Which example data to use (by position or name). Defaults to
1.}
}
\value{
For Part One and Part Two, the functions return the total fuel spent
for the optimal position.
}
\description{
\href{https://adventofcode.com/2021/day/7}{The Treachery of Whales}
}
\details{
\strong{Part One}

A giant \href{https://en.wikipedia.org/wiki/Sperm_whale}{whale} has decided
your submarine is its next meal, and it\'s much faster than you are.
There\'s nowhere to run!

Suddenly, a swarm of crabs (each in its own tiny submarine - it\'s too
deep for them otherwise) zooms in to rescue you! They seem to be
preparing to blast a hole in the ocean floor; sensors indicate a
\emph{massive underground cave system} just beyond where they\'re aiming!

The crab submarines all need to be aligned before they\'ll have enough
power to blast a large enough hole for your submarine to get through.
However, it doesn\'t look like they\'ll be aligned before the whale
catches you! Maybe you can help?

There\'s one major catch - crab submarines can only move horizontally.

You quickly make a list of \emph{the horizontal position of each crab} (your
puzzle input). Crab submarines have limited fuel, so you need to find a
way to make all of their horizontal positions match while requiring them
to spend as little fuel as possible.

For example, consider the following horizontal positions:\preformatted{16,1,2,0,4,2,7,1,2,14
}

This means there\'s a crab with horizontal position \code{16}, a crab with
horizontal position \code{1}, and so on.

Each change of 1 step in horizontal position of a single crab costs 1
fuel. You could choose any horizontal position to align them all on, but
the one that costs the least fuel is horizontal position \code{2}:
\itemize{
\item Move from \code{16} to \code{2}: \code{14} fuel
\item Move from \code{1} to \code{2}: \code{1} fuel
\item Move from \code{2} to \code{2}: \code{0} fuel
\item Move from \code{0} to \code{2}: \code{2} fuel
\item Move from \code{4} to \code{2}: \code{2} fuel
\item Move from \code{2} to \code{2}: \code{0} fuel
\item Move from \code{7} to \code{2}: \code{5} fuel
\item Move from \code{1} to \code{2}: \code{1} fuel
\item Move from \code{2} to \code{2}: \code{0} fuel
\item Move from \code{14} to \code{2}: \code{12} fuel
}

This costs a total of \code{37} fuel. This is the cheapest possible outcome;
more expensive outcomes include aligning at position \code{1} (\code{41} fuel),
position \code{3} (\code{39} fuel), or position \code{10} (\code{71} fuel).

Determine the horizontal position that the crabs can align to using the
least fuel possible. \emph{How much fuel must they spend to align to that
position?}

\strong{Part Two}

The crabs don\'t seem interested in your proposed solution. Perhaps you
misunderstand crab engineering?

As it turns out, crab submarine engines [don\'t burn fuel at a constant
rate]{title="This appears to be due to the modial interaction of magneto-reluctance and capacitive duractance."}.
Instead, each change of 1 step in horizontal position costs 1 more unit
of fuel than the last: the first step costs \code{1}, the second step costs
\code{2}, the third step costs \code{3}, and so on.

As each crab moves, moving further becomes more expensive. This changes
the best horizontal position to align them all on; in the example above,
this becomes \code{5}:
\itemize{
\item Move from \code{16} to \code{5}: \code{66} fuel
\item Move from \code{1} to \code{5}: \code{10} fuel
\item Move from \code{2} to \code{5}: \code{6} fuel
\item Move from \code{0} to \code{5}: \code{15} fuel
\item Move from \code{4} to \code{5}: \code{1} fuel
\item Move from \code{2} to \code{5}: \code{6} fuel
\item Move from \code{7} to \code{5}: \code{3} fuel
\item Move from \code{1} to \code{5}: \code{10} fuel
\item Move from \code{2} to \code{5}: \code{6} fuel
\item Move from \code{14} to \code{5}: \code{45} fuel
}

This costs a total of \code{168} fuel. This is the new cheapest possible
outcome; the old alignment position (\code{2}) now costs \code{206} fuel instead.

Determine the horizontal position that the crabs can align to using the
least fuel possible so they can make you an escape route! \emph{How much fuel
must they spend to align to that position?}
}
\examples{
f07a_optimize_fuel_linear(example_data_07())
f07b_optimize_fuel_triangular(example_data_07())
}
